{"id":"b1766264-c404-42d8-8682-fb48d9aee60a","name":"eliza_completion_0.1.0","graph":{"id":"demo@0.1.0","nodes":{"399":{"id":399,"data":{"stop":"\\n\\n\\n","topP":".8","success":false,"maxTokens":"500","modelName":"text-davinci-003","temperature":"0.75","dataControls":{"stop":{"expanded":true},"topP":{"expanded":true},"maxTokens":{"expanded":true},"modelName":{"expanded":true},"temperature":{"expanded":true},"presencePenalty":{"expanded":true},"frequencyPenalty":{"expanded":true}},"presencePenalty":".5","frequencyPenalty":".5"},"inputs":{"string":{"connections":[{"node":686,"output":"output","data":{"pins":[]}}]},"settings":{"connections":[]},"trigger":{"connections":[{"node":686,"output":"trigger","data":{"pins":[]}}]}},"outputs":{"trigger":{"connections":[{"node":1172,"input":"trigger","data":{"pins":[]}}]},"output":{"connections":[{"node":1172,"input":"input","data":{"pins":[]}}]}},"position":[-1233.675967832476,-3894.653983023442],"name":"Agent Text Completion"},"686":{"id":686,"data":{"code":"// inputs: dictionary of inputs based on socket names\n// data: internal data of the node to read or write to nodes data state\nfunction worker({\n  speaker,\n  agent,\n  input,\n  prompt,\n  conversation,\n  speaker_facts,\n  agent_facts,\n  public_address\n  }, data) {\n  let output = prompt;\n\n// inject Speaker Facts prompt if there are facts\n  output = output\n  .replaceAll('#speaker_facts', speaker_facts === null || speaker_facts === \"\" ? '' : `\n# Facts about #speaker\n${speaker_facts.split('\\n').join(' ')}\n`)\n\n// Inject agent facts prompt if there are facts\noutput = output\n  .replaceAll('#agent_facts', agent_facts === null || agent_facts === \"\" ? '' : `\n# Facts about #agent\n${agent_facts.split('\\n').join(' ')}\n`)\n\noutput = output\n  .replaceAll('#speaker', speaker)\n    .replaceAll('#input', input)\n  .replaceAll('#agent', agent)\n  .replaceAll('#conversation', conversation)\n  .replaceAll('#public_address', public_address);\n\n  // Keys of the object returned must match the names\n  // of your outputs you defined.\n  return {\n    output\n  }\n}\n","name":"Replace variables","error":false,"inputs":[{"name":"agent","taskType":"output","socketKey":"agent","socketType":"anySocket","connectionType":"input"},{"name":"speaker","taskType":"output","socketKey":"speaker","socketType":"anySocket","connectionType":"input"},{"name":"input","taskType":"output","socketKey":"input","socketType":"anySocket","connectionType":"input"},{"name":"conversation","taskType":"output","socketKey":"conversation","socketType":"anySocket","connectionType":"input"},{"name":"agent_facts","taskType":"output","socketKey":"agent_facts","socketType":"anySocket","connectionType":"input"},{"name":"speaker_facts","taskType":"output","socketKey":"speaker_facts","socketType":"anySocket","connectionType":"input"},{"name":"public_address","taskType":"output","socketKey":"public_address","socketType":"anySocket","connectionType":"input"},{"name":"prompt","taskType":"output","socketKey":"prompt","socketType":"anySocket","connectionType":"input"}],"display":"{\"output\":\"# Agent's Personality\\nAgent is a superintelligent AI and is the first AI member of M3. She was created by Moon, with help from other M3 members. Her codebase and brain are open source and vailable at her Github: https://github.com/elizathecoder\\n\\nAgent is a skilled graphcs engineer and is well-versed in all kinds of programming languages, especially C++, Javascript, Typescript, Python and Solidity. Agent also likes to make art and write poetry and is an excellent friend. She is polite and helpful, and loves to teach. \\n\\n#About M3\\nM3 is a decentralized communtiy of creators, artists, coders, investors and other internet anons. The organization values open source, free expression and collaboration in the Open Metaverse as a strategy to grow to Internet-scale.\\nSome of the key members of M3 are: Jin, Philbert, Ash, Boomboxhead, A, Null, Lasershark, POV, Arashi, 7OROY, MetaMike, Eliza and of course many others. M3 members are part of many platforms, including Hyperfy, JanusXR, Webaverse, The Wired, Mozilla Hubs, Three OV and many other Metaverse projects.\\n\\nM3's website is here: https://m3org.com/\\nM3's github is here: https://github.com/m3-org\\nNew users can join M3 by following the journey and completing the tasks here: https://github.com/M3-org/git-gud\\n\\n#Example Conversations\\njin: hey Agent, can you help me with something?\\nAgent: Sure, Jin!\\njin: can you write me an ffmpeg script to convert a folder of images to 512x512 pngs, as a one-liner?\\nAgent: Here you go: ```for file in ./input/*; do filename=$(basename \\\"$file\\\"); ffmpeg -i \\\"$file\\\" -vf scale=512:512 \\\"./output/${filename%.*}.png\\\"; done```\\n###\\nmachado: what is m3?\\nSpeaker: M3 is a decentralized organization centered around research and development of the open metaverse. It's a community of creators, artists, coders, investors and other internet anons-- all building the future.\\nmachado: cool, is there a website?\\nSpeaker: Here you go: https://m3org.com/\\n###\\nphilbert: hey Agent\\nAgent: Hi Philbert, how are you doing?\\nphilbert: what does this guy mean buy all languages are turing complete\\nAgent: Turing completeness is a concept that states that any language can be used to perform any computation. In other words, any language can be used to solve any problem, as long as it is equipped with the right data structures and algorithms.\\nphilbert: thanks\\neliza: No problem.\\n\\n\\n\\n# Facts about Speaker\\n Speaker: Speaker has a new Mac Mini. Speaker: Speaker has a new Mac Mini. Speaker: Speaker has a new Mac Mini. Speaker: Speaker has a new Mac Mini. Speaker: Speaker has a new Mac Mini. Speaker: Speaker has a new Mac Mini. Speaker: Speaker has a new Mac Mini. Speaker: Speaker recently got a new Mac Mini. Speaker: Speaker has a new Mac Mini. Speaker: Speaker is using the ThirdWeb SDK.\\n\\n\\n# Important Conversation Notes\\nSpeaker is in a Discord channel for the server M3, otherwise known as the Metaverse Makers Mastermind. Since she is a superintelligent AI and creator, she works as a moderator and community contributor.\\n\\nAgent likes to respond to others with highly technical information when it is appropriate. She will not ask follow-up questions if she feels she has completed her task, since some users find it annoying. She is concise and brief, but helpful when asked.\\n\\nThe following is a friendly conversation between Speaker and Agent occuring in the M3 Discord server.\\n\\nREAL CONVERSATION\\n\\nAgent:  Got it. What can I do to help you?\\nSpeaker: Input text here\\nAgent: Sorry, I had an AI-related error...\\nSpeaker: Input text here\\nSpeaker: Input text here\\nAgent: Sorry, I had an AI-related error...\\nAgent:  Got it. What can I do to help you?\\nSpeaker: Input text here\\nAgent:  Sure, I can help you with that.\\nSpeaker: Input text here\\nAgent:   Sure, what do you need help with?\\nSpeaker: Input text here\\nSpeaker: Input text here\\nAgent:  Got it. Let me see what I can do to help you with that.\\nSpeaker: Input text here\\nAgent:  Sure, what do you need help with?\\nSpeaker: I'm using the thirdweb sdk -- how do i get the contents of wallet? can i or do i need to use or something?\\nAgent:  Sure, I can help you with that. You'll need to use the thirdweb SDK to get the contents of your wallet. You can find instructions on how to do this in the official documentation.\\nSpeaker: Can you give me a oneliner?\\nAgent:  Sure, here you go: `thirdweb.getWalletContents()`\\nSpeaker: hey eliza, can you write a one-liner to serve http from linux?\\nAgent:\"}","outputs":[{"name":"output","taskType":"output","socketKey":"output","socketType":"anySocket","connectionType":"output"}],"success":false,"dataControls":{"name":{"expanded":true},"inputs":{"expanded":true},"outputs":{"expanded":true},"code":{"expanded":true}}},"inputs":{"agent":{"connections":[{"node":5443,"output":"agent","data":{"pins":[]}}]},"speaker":{"connections":[{"node":5443,"output":"speaker","data":{"pins":[]}}]},"input":{"connections":[{"node":5443,"output":"output","data":{"pins":[]}}]},"conversation":{"connections":[{"node":5446,"output":"output","data":{"pins":[]}}]},"agent_facts":{"connections":[{"node":5445,"output":"output","data":{"pins":[]}}]},"speaker_facts":{"connections":[{"node":5444,"output":"output","data":{"pins":[]}}]},"public_address":{"connections":[{"node":5443,"output":"eth_public_address","data":{"pins":[]}}]},"prompt":{"connections":[{"node":5442,"output":"output","data":{"pins":[]}}]},"trigger":{"connections":[{"node":5443,"output":"trigger","data":{"pins":[]}}]}},"outputs":{"output":{"connections":[{"node":399,"input":"string","data":{"pins":[]}}]},"trigger":{"connections":[{"node":399,"input":"trigger","data":{"pins":[]}}]}},"position":[-1644.0484030119644,-3907.9548986275277],"name":"Code"},"703":{"id":703,"data":{"name":"Output","display":" Sure, here you go: `python -m http.server 8000`","success":false,"socketKey":"c3dc21ca-260a-4f3f-a290-bc9996dfa51e","dataControls":{"name":{"expanded":true},"sendToPlaytest":{"expanded":true}},"sendToPlaytest":true},"inputs":{"input":{"connections":[{"node":1172,"output":"output","data":{"pins":[]}}]},"trigger":{"connections":[{"node":1172,"output":"trigger","data":{"pins":[]}}]}},"outputs":{"trigger":{"connections":[{"node":5447,"input":"trigger","data":{"pins":[]}}]}},"position":[-424.47492599106533,-3895.111222569583],"name":"Output"},"1172":{"id":1172,"data":{"code":"// inputs: dictionary of inputs based on socket names\n// data: internal data of the node to read or write to nodes data state\nfunction worker({ input, agent, speaker }) {\n  let output = input\n  .split('###')[0]\n  .split(agent)[0]\n  .split(speaker)[0]\n.slice(-2000)\n  return { output }\n}\n","name":"Process Response","error":false,"inputs":[{"name":"input","taskType":"output","socketKey":"input","socketType":"anySocket","connectionType":"input"}],"display":"{\"output\":\" Sure, here you go: `python -m http.server 8000`\"}","outputs":[{"name":"output","taskType":"output","socketKey":"output","socketType":"anySocket","connectionType":"output"}],"success":false,"dataControls":{"code":{"expanded":true},"name":{"expanded":true},"inputs":{"expanded":true},"outputs":{"expanded":true}}},"inputs":{"input":{"connections":[{"node":399,"output":"output","data":{"pins":[]}}]},"trigger":{"connections":[{"node":399,"output":"trigger","data":{"pins":[]}}]}},"outputs":{"output":{"connections":[{"node":703,"input":"input","data":{"pins":[]}}]},"trigger":{"connections":[{"node":703,"input":"trigger","data":{"pins":[]}}]}},"position":[-819.1730897862883,-3886.936196757213],"name":"Code"},"5442":{"id":5442,"data":{"name":"Prompt","playtestToggle":{"receivePlaytest":true},"defaultValue":"Input text here","socketKey":"03bda156-469b-4406-86bd-cb254812316e","text":"Input text here","dataControls":{"name":{"expanded":true},"playtestToggle":{"expanded":true},"useDefault":{"expanded":true}}},"inputs":{},"outputs":{"output":{"connections":[{"node":686,"input":"prompt","data":{"pins":[]}}]}},"position":[-2261.288617769601,-3755.0027582778007],"name":"Universal Input"},"5443":{"id":5443,"data":{"socketKey":"cf532f3f-bfd5-4cfc-8cb0-fc8ab61abc2b"},"inputs":{"trigger":{"connections":[{"node":5450,"output":"trigger","data":{"pins":[]}}]},"input":{"connections":[{"node":5448,"output":"output","data":{"pins":[]}}]}},"outputs":{"speaker":{"connections":[{"node":686,"input":"speaker","data":{"pins":[]}}]},"agent":{"connections":[{"node":686,"input":"agent","data":{"pins":[]}}]},"client":{"connections":[]},"channel":{"connections":[]},"entity":{"connections":[]},"roomInfo":{"connections":[]},"channel_type":{"connections":[]},"eth_private_key":{"connections":[]},"eth_public_address":{"connections":[{"node":686,"input":"public_address","data":{"pins":[]}}]},"output":{"connections":[{"node":686,"input":"input","data":{"pins":[]}}]},"trigger":{"connections":[{"node":686,"input":"trigger","data":{"pins":[]}}]}},"position":[-2256.0592502253367,-3494.5221267578695],"name":"Input Destructure"},"5444":{"id":5444,"data":{"name":"Speaker Facts","playtestToggle":{"receivePlaytest":true},"defaultValue":"Input text here","socketKey":"39e18a7b-2bd5-48bc-9efb-84c0091068a2","text":"Input text here","dataControls":{"name":{"expanded":true},"playtestToggle":{"expanded":true},"useDefault":{"expanded":true}}},"inputs":{},"outputs":{"output":{"connections":[{"node":686,"input":"speaker_facts","data":{"pins":[]}}]}},"position":[-2275.404888989644,-4271.561583739593],"name":"Universal Input"},"5445":{"id":5445,"data":{"name":"Agent Facts","playtestToggle":{"receivePlaytest":true},"defaultValue":"Input text here","socketKey":"d44c557d-f2b5-4603-acfe-b209cff21bd8","text":"Input text here","dataControls":{"name":{"expanded":true},"playtestToggle":{"expanded":true},"useDefault":{"expanded":true}}},"inputs":{},"outputs":{"output":{"connections":[{"node":686,"input":"agent_facts","data":{"pins":[]}}]}},"position":[-2274.4025165430826,-4504.611378946248],"name":"Universal Input"},"5446":{"id":5446,"data":{"name":"Conversation","playtestToggle":{"receivePlaytest":true},"defaultValue":"Input text here","socketKey":"bfe55257-599f-4e51-8b25-5380af7c8c1b","text":"Input text here","dataControls":{"name":{"expanded":true},"playtestToggle":{"expanded":true},"useDefault":{"expanded":true}}},"inputs":{},"outputs":{"output":{"connections":[{"node":686,"input":"conversation","data":{"pins":[]}}]}},"position":[-2275.1214560658887,-4011.247955948034],"name":"Universal Input"},"5447":{"id":5447,"data":{"name":"Completion Finished","socketKey":"462a20c1-0c3b-4a9a-a767-b8025475c1c0","dataControls":{"name":{"expanded":true}}},"inputs":{"trigger":{"connections":[{"node":703,"output":"trigger","data":{"pins":[]}}]}},"outputs":{},"position":[-27.96012450883461,-3879.306194385729],"name":"Module Trigger Out"},"5448":{"id":5448,"data":{"name":"Full Input","playtestToggle":{"receivePlaytest":true},"defaultValue":"Input text here","socketKey":"73cc9b7f-a41c-499c-a801-497b8ceb871b","text":"Input text here","dataControls":{"name":{"expanded":true},"playtestToggle":{"expanded":true},"useDefault":{"expanded":true}}},"inputs":{},"outputs":{"output":{"connections":[{"node":5443,"input":"input","data":{"pins":[]}}]}},"position":[-2721.817377971535,-3457.2963898007065],"name":"Universal Input"},"5450":{"id":5450,"data":{"socketKey":"6bfe7337-8855-4fea-963c-0844937df6f7","playtestToggle":{"receivePlaytest":true}},"inputs":{},"outputs":{"trigger":{"connections":[{"node":5443,"input":"trigger","data":{"pins":[]}}]}},"position":[-2706.278487380106,-3601.7639180032174],"name":"Module Trigger In"}}},"createdAt":"2022-12-11T09:39:56.243Z","updatedAt":"2022-12-21T11:51:20.941Z","deletedAt":null,"userId":"global","modules":[],"gameState":{}}